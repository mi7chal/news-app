{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Documents/portal_psi/src/edit/edit.js\",\n    _s = $RefreshSig$();\n\nimport './edit.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { notificationsPush } from '../redux/actions/';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport TextBox from '../components/TextBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditArticle() {\n  _s();\n\n  const [options, setOptions] = useState('');\n  const editImageInput = useRef();\n  const editImageView = useRef();\n  const titleInput = useRef();\n  const contentInput = useRef();\n  const selectStatus = useRef();\n  const selectCategory = useRef();\n  const tags = useRef();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [ifEdit, setIfEdit] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function fetchdownload() {\n      const fetchData = await fetch('http://localhost/blogg/api/listCategories.php', {\n        credentials: 'include',\n        method: 'GET'\n      });\n      const data = await fetchData.json();\n\n      if (data.status === 1) {\n        const toSet = await data.body.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: x.id,\n          children: x.kategoria\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 58\n        }, this));\n        setOptions(toSet);\n\n        if (data.alreadyLogged === false) {\n          history.push('/');\n        }\n      } else {\n        dispatch(notificationsPush({\n          x: data.info,\n          color: \"red\"\n        }));\n      }\n\n      if (id) {\n        const fetchData = await fetch(`http://localhost/blogg/api/articleToEdit.php?id=${id}`, {\n          credentials: 'include',\n          method: 'GET'\n        });\n        const data1 = await fetchData.json();\n\n        if (data1.status === 1) {\n          const tagsToView = JSON.parse(data1.body.tagi).join(', ');\n          editImageView.current.style.backgroundImage = `url('http://localhost/blogg/api/articleImages/${data1.body.id}/${data1.body.zdjecie}')`;\n          titleInput.current.value = data1.body.tytul;\n          contentInput.current.value = data1.body.tresc;\n          selectStatus.current.value = data1.body.status;\n          selectCategory.current.value = data1.body.kategorie;\n          tags.current.value = tagsToView;\n          setIfEdit(true);\n        } else {\n          history.push('/panel');\n          dispatch(notificationsPush({\n            x: data1.info,\n            color: \"red\"\n          }));\n        }\n      }\n    }\n\n    fetchdownload();\n  }, [dispatch, history, id]);\n\n  const imageOnChange = evt => {\n    var tgt = evt.target,\n        files = tgt.files;\n\n    if (FileReader && files && files.length) {\n      var fr = new FileReader();\n\n      fr.onload = function () {\n        editImageView.current.style.backgroundImage = `url('${fr.result}')`;\n      };\n\n      fr.readAsDataURL(files[0]);\n    } else {}\n  };\n\n  const addSend = async () => {\n    var formData = new FormData();\n    let link = 'http://localhost/blogg/api/add.php';\n\n    if (ifEdit) {\n      link = 'http://localhost/blogg/api/edit.php';\n      formData.append('id', id);\n    }\n\n    formData.append('title', titleInput.current.value);\n    formData.append('tags', JSON.stringify(tags.current.value.split(', ')));\n    formData.append('content', contentInput.current.value);\n    formData.append('image', editImageInput.current.files[0]);\n    formData.append('category', selectCategory.current.value);\n    formData.append('status', selectStatus.current.value);\n    const dataTemp = await fetch(link, {\n      method: 'POST',\n      credentials: 'include',\n      body: formData\n    });\n    const data = await dataTemp.json();\n\n    if (data.status === 1) {\n      history.push('/panel');\n      dispatch(notificationsPush({\n        x: data.info,\n        color: \"\"\n      }));\n    } else {\n      dispatch(notificationsPush({\n        x: data.info,\n        color: \"red\"\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editImage\",\n      ref: editImageView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      placeholder: \"Tytu\\u0142\",\n      className: \"editTitle toSelect\",\n      ref: titleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Tre\\u015B\\u0107\",\n      className: \"editContent toSelect\",\n      ref: contentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), \"Tagi (oddziel przeicnkiem i spacj\\u0105) \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"z dzi\\u015B, ogr\\xF3d, news\",\n      className: \"editTags toSelect\",\n      ref: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), \"Kategoria:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: selectCategory,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 70\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), \"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: selectStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"prywatny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"publiczny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      ref: editImageInput,\n      onChange: e => imageOnChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: () => addSend(),\n      children: \"Zapisz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditArticle, \"hrEwgDwKYsbhSOzjQOA4F7Qr3ww=\", false, function () {\n  return [useDispatch, useHistory, useParams];\n});\n\n_c = EditArticle;\nexport default EditArticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditArticle\");","map":{"version":3,"sources":["/Users/michal/Documents/portal_psi/src/edit/edit.js"],"names":["React","useState","useRef","useEffect","useDispatch","notificationsPush","useHistory","useParams","TextBox","EditArticle","options","setOptions","editImageInput","editImageView","titleInput","contentInput","selectStatus","selectCategory","tags","dispatch","history","ifEdit","setIfEdit","id","fetchdownload","fetchData","fetch","credentials","method","data","json","status","toSet","body","map","x","kategoria","alreadyLogged","push","info","color","data1","tagsToView","JSON","parse","tagi","join","current","style","backgroundImage","zdjecie","value","tytul","tresc","kategorie","imageOnChange","evt","tgt","target","files","FileReader","length","fr","onload","result","readAsDataURL","addSend","formData","FormData","link","append","stringify","split","dataTemp","e"],"mappings":"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","sourcesContent":["import './edit.css';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { notificationsPush } from '../redux/actions/';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\nimport TextBox from '../components/TextBox';\r\n\r\nfunction EditArticle() {\r\n    const [options, setOptions] = useState('');\r\n    const editImageInput = useRef();\r\n    const editImageView = useRef();\r\n    const titleInput = useRef();\r\n    const contentInput = useRef();\r\n    const selectStatus = useRef();\r\n    const selectCategory = useRef();\r\n    const tags = useRef();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [ifEdit, setIfEdit] = useState(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchdownload() {\r\n            const fetchData = await fetch('http://localhost/blogg/api/listCategories.php', { credentials: 'include', method: 'GET' });\r\n            const data = await fetchData.json();\r\n            if (data.status === 1) {\r\n                const toSet = await data.body.map((x) => <option value={x.id} key={x.id}>{x.kategoria}</option>)\r\n                setOptions(toSet);\r\n\r\n                if (data.alreadyLogged === false) {\r\n                    history.push('/');\r\n                }\r\n\r\n            }\r\n            else {\r\n                dispatch(notificationsPush({ x: data.info, color: \"red\" }));\r\n            }\r\n            if (id) {\r\n                const fetchData = await fetch(`http://localhost/blogg/api/articleToEdit.php?id=${id}`, { credentials: 'include', method: 'GET' });\r\n                const data1 = await fetchData.json();\r\n\r\n                if (data1.status === 1) {\r\n                    const tagsToView = JSON.parse(data1.body.tagi).join(', ');\r\n\r\n                    editImageView.current.style.backgroundImage = `url('http://localhost/blogg/api/articleImages/${data1.body.id}/${data1.body.zdjecie}')`;\r\n                    titleInput.current.value = data1.body.tytul;\r\n                    contentInput.current.value = data1.body.tresc;\r\n                    selectStatus.current.value = data1.body.status;\r\n                    selectCategory.current.value = data1.body.kategorie;\r\n                    tags.current.value = tagsToView;\r\n                    setIfEdit(true);\r\n\r\n                }\r\n                else {\r\n                    history.push('/panel');\r\n                    dispatch(notificationsPush({ x: data1.info, color: \"red\" }));\r\n                }\r\n            }\r\n        }\r\n        fetchdownload();\r\n\r\n    }, [dispatch, history, id])\r\n\r\n\r\n    const imageOnChange = (evt) => {\r\n        var tgt = evt.target,\r\n            files = tgt.files;\r\n\r\n        if (FileReader && files && files.length) {\r\n            var fr = new FileReader();\r\n            fr.onload = function () {\r\n                editImageView.current.style.backgroundImage = `url('${fr.result}')`;\r\n            }\r\n            fr.readAsDataURL(files[0]);\r\n        }\r\n\r\n        else {\r\n\r\n        }\r\n    }\r\n    const addSend = async () => {\r\n        var formData = new FormData();\r\n        let link = 'http://localhost/blogg/api/add.php';\r\n        if (ifEdit) {\r\n            link = 'http://localhost/blogg/api/edit.php';\r\n            formData.append('id', id);\r\n\r\n        }\r\n\r\n        formData.append('title', titleInput.current.value);\r\n        formData.append('tags', JSON.stringify(tags.current.value.split(', ')));\r\n        formData.append('content', contentInput.current.value);\r\n        formData.append('image', editImageInput.current.files[0]);\r\n        formData.append('category', selectCategory.current.value);\r\n        formData.append('status', selectStatus.current.value);\r\n        const dataTemp = await fetch(link, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            body: formData\r\n        })\r\n        const data = await dataTemp.json();\r\n\r\n        if (data.status === 1) {\r\n            history.push('/panel');\r\n            dispatch(notificationsPush({ x: data.info, color: \"\" }))\r\n        }\r\n        else {\r\n            dispatch(notificationsPush({ x: data.info, color: \"red\" }));\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"editBody\">\r\n            <div className=\"editImage\" ref={editImageView}></div>\r\n            <TextBox placeholder=\"Tytuł\" className=\"editTitle toSelect\" ref={titleInput}></TextBox>\r\n            <textarea placeholder=\"Treść\" className=\"editContent toSelect\" ref={contentInput}></textarea>\r\n            <br />\r\n            Tagi (oddziel przeicnkiem i spacją) <textarea placeholder=\"z dziś, ogród, news\" className=\"editTags toSelect\" ref={tags} />\r\n            <br />\r\n            <br />\r\n\r\n            Kategoria:<select ref={selectCategory}>{options}</select><br />\r\n            <br />\r\n\r\n            Status:<select ref={selectStatus}><option value={0}>prywatny</option><option value={1}>publiczny</option></select>\r\n            <br />\r\n            <br />\r\n\r\n            <input type=\"file\" accept=\"image/*\" ref={editImageInput} onChange={(e) => imageOnChange(e)} />\r\n            <br />\r\n            <br />\r\n            <div className=\"button\" onClick={() => addSend()}>Zapisz</div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default EditArticle;\r\n"]},"metadata":{},"sourceType":"module"}