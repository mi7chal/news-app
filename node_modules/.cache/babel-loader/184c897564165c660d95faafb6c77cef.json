{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Documents/portal_psi/src/register/register.js\";\nimport './register.css';\nimport React from 'react';\nimport { notificationsPush } from '../redux/actions/';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.validate = {\n      firtstPassword: e => {\n        if (e.target.value.length >= 8) e.target.style.borderColor = \"var(--darkGray)\";else e.target.style.borderColor = \"#c21d1d\";\n      },\n      secondPassword: e => {\n        if (e.target.value.length >= 8 && this.input.password1.current.value === e.target.value) {\n          e.target.style.borderColor = \"var(--darkGray)\";\n          this.passwordValid = true;\n        } else {\n          this.passwordValid = false;\n          e.target.style.borderColor = \"#c21d1d\";\n        }\n      },\n      email: e => {\n        if (e.target.value.includes(\".\") && e.target.value.includes(\"@\")) {\n          e.target.style.borderColor = \"var(--darkGray)\";\n          this.emailValid = true;\n        } else {\n          this.emailValid = false;\n          e.target.style.borderColor = \"#c21d1d\";\n        }\n      },\n      login: e => {\n        if (e.target.value.length >= 5) e.target.style.borderColor = \"var(--darkGray)\";else e.target.style.borderColor = \"#c21d1d\";\n      }\n    };\n\n    this.signUp = async () => {\n      if (this.emailValid && this.passwordValid) {\n        const formData = {\n          name: this.input.name.current.value,\n          surname: this.input.surname.current.value,\n          login: this.input.login.current.value,\n          email: this.input.email.current.value,\n          password1: this.input.password1.current.value,\n          password2: this.input.password2.current.value\n        };\n        const fetchData = await fetch('http://localhost/blogg/api/register.php', {\n          credentials: 'include',\n          method: 'POST',\n          body: JSON.stringify(formData)\n        });\n        const data = await fetchData.json();\n\n        if (data.status === 1) {\n          this.props.history.push(\"/\");\n          this.props.history.go(0);\n          this.props.push({\n            x: data.info,\n            color: \"\"\n          });\n        } else {\n          //var newNotifications= data.info.map((x,i)=><Modal key={i} color=\"red\">{x}</Modal>);\n          //this.setState({ modal: null });\n          //this.setState({ modal: newNotifications });\n          data.info.map(item => this.props.push({\n            x: item,\n            color: \"red\"\n          }));\n        }\n      } else {\n        return 0;\n      }\n    };\n\n    this.emailValid = false;\n    this.passwordValid = false;\n    this.loginValid = false;\n    this.input = {};\n    this.input.name = /*#__PURE__*/React.createRef();\n    this.input.surname = /*#__PURE__*/React.createRef();\n    this.input.login = /*#__PURE__*/React.createRef();\n    this.input.email = /*#__PURE__*/React.createRef();\n    this.input.password1 = /*#__PURE__*/React.createRef();\n    this.input.password2 = /*#__PURE__*/React.createRef();\n    this.state = {\n      modal: []\n    };\n\n    if (this.props.loggedAlready) {\n      this.props.history.push('/');\n    }\n  }\n\n  onLogout() {}\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    if (this.props.loggedAlready) {\n      this.props.history.push('/');\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.loggedAlready) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerBackground\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"registerHeader\",\n            children: \"Zarejestruj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"registerForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterName\",\n              name: \"name\",\n              placeholder: \"imi\\u0119\",\n              autoComplete: \"off\",\n              ref: this.input.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterSurname\",\n              name: \"surname\",\n              placeholder: \"nazwisko\",\n              autoComplete: \"off\",\n              ref: this.input.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterLogin\",\n              name: \"login\",\n              placeholder: \"login\",\n              autoComplete: \"off\",\n              onChange: e => this.validate.login(e),\n              ref: this.input.login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterEmail\",\n              name: \"email\",\n              placeholder: \"email\",\n              autoComplete: \"off\",\n              onChange: e => this.validate.email(e),\n              ref: this.input.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword1\",\n              name: \"password1\",\n              placeholder: \"has\\u0142o\",\n              autoComplete: \"off\",\n              onChange: e => this.validate.firtstPassword(e),\n              ref: this.input.password1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword2\",\n              name: \"password2\",\n              placeholder: \"powt\\xF3rz has\\u0142o\",\n              autoComplete: \"off\",\n              onChange: e => this.validate.secondPassword(e),\n              ref: this.input.password2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexSpace\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reigisterBackButon\",\n              onClick: () => this.props.history.goBack(),\n              children: \"Powr\\xF3t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonFill loginRegisterButton\",\n              onClick: () => this.signUp(),\n              children: \"Zarejestruj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const mapStateToProps = state => ({\n//     isLogged: state.isLogged\n// });\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    push: x => dispatch(notificationsPush(x))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register); //export default Register;","map":{"version":3,"sources":["/Users/michal/Documents/portal_psi/src/register/register.js"],"names":["React","notificationsPush","connect","Register","Component","constructor","props","validate","firtstPassword","e","target","value","length","style","borderColor","secondPassword","input","password1","current","passwordValid","email","includes","emailValid","login","signUp","formData","name","surname","password2","fetchData","fetch","credentials","method","body","JSON","stringify","data","json","status","history","push","go","x","info","color","map","item","loginValid","createRef","state","modal","loggedAlready","onLogout","componentDidMount","window","scrollTo","componentDidUpdate","render","goBack","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import './register.css';\r\nimport React from 'react';\r\nimport { notificationsPush } from '../redux/actions/';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.emailValid = false;\r\n        this.passwordValid = false;\r\n        this.loginValid = false;\r\n\r\n        this.input = {};\r\n\r\n        this.input.name = React.createRef();\r\n        this.input.surname = React.createRef();\r\n        this.input.login = React.createRef();\r\n        this.input.email = React.createRef();\r\n        this.input.password1 = React.createRef();\r\n        this.input.password2 = React.createRef();\r\n\r\n        this.state = {\r\n            modal: [],\r\n\r\n        }\r\n        if (this.props.loggedAlready) {\r\n            this.props.history.push('/');\r\n        }\r\n\r\n    }\r\n\r\n    onLogout() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        if (this.props.loggedAlready) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.loggedAlready) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    validate = {\r\n        firtstPassword: (e) => {\r\n            if (e.target.value.length >= 8)\r\n                e.target.style.borderColor = \"var(--darkGray)\";\r\n\r\n            else\r\n                e.target.style.borderColor = \"#c21d1d\";\r\n\r\n        },\r\n        secondPassword: (e) => {\r\n            if (e.target.value.length >= 8 && this.input.password1.current.value === e.target.value) {\r\n                e.target.style.borderColor = \"var(--darkGray)\";\r\n                this.passwordValid = true;\r\n            }\r\n\r\n            else {\r\n                this.passwordValid = false;\r\n                e.target.style.borderColor = \"#c21d1d\";\r\n            }\r\n        },\r\n        email: (e) => {\r\n            if (e.target.value.includes(\".\") && e.target.value.includes(\"@\")) {\r\n                e.target.style.borderColor = \"var(--darkGray)\";\r\n                this.emailValid = true;\r\n            }\r\n            else {\r\n                this.emailValid = false;\r\n                e.target.style.borderColor = \"#c21d1d\";\r\n            }\r\n        },\r\n        login: (e) => {\r\n            if (e.target.value.length >= 5)\r\n                e.target.style.borderColor = \"var(--darkGray)\";\r\n\r\n            else\r\n                e.target.style.borderColor = \"#c21d1d\";\r\n        }\r\n    }\r\n\r\n    signUp = async () => {\r\n\r\n        if (this.emailValid && this.passwordValid) {\r\n            const formData = {\r\n                name: this.input.name.current.value,\r\n                surname: this.input.surname.current.value,\r\n                login: this.input.login.current.value,\r\n                email: this.input.email.current.value,\r\n                password1: this.input.password1.current.value,\r\n                password2: this.input.password2.current.value\r\n            }\r\n\r\n            const fetchData = await fetch('http://localhost/blogg/api/register.php', {\r\n                credentials: 'include',\r\n                method: 'POST',\r\n                body: JSON.stringify(formData),\r\n            }\r\n            );\r\n\r\n            const data = await fetchData.json();\r\n            if (data.status === 1) {\r\n                this.props.history.push(\"/\");\r\n                this.props.history.go(0);\r\n                this.props.push({ x: data.info, color: \"\", })\r\n            }\r\n            else {\r\n                //var newNotifications= data.info.map((x,i)=><Modal key={i} color=\"red\">{x}</Modal>);\r\n                //this.setState({ modal: null });\r\n                //this.setState({ modal: newNotifications });\r\n                data.info.map((item) => this.props.push({ x: item, color: \"red\", }));\r\n            }\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"registerBackground\">\r\n\r\n                    <div className=\"registerBox\">\r\n\r\n                        <p className=\"registerHeader\">Zarejestruj</p>\r\n\r\n                        <form className=\"registerForm\">\r\n\r\n                            <input type=\"text\" className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterName\"\r\n                                name=\"name\" placeholder=\"imię\" autoComplete=\"off\" ref={this.input.name} />\r\n\r\n                            <input type=\"text\" className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterSurname\"\r\n                                name=\"surname\" placeholder=\"nazwisko\" autoComplete=\"off\" ref={this.input.surname} />\r\n\r\n                            <input type=\"text\" className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterLogin\"\r\n                                name=\"login\" placeholder=\"login\" autoComplete=\"off\"\r\n                                onChange={(e) => this.validate.login(e)} ref={this.input.login} />\r\n\r\n                            <input type=\"text\" className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterEmail\"\r\n                                name=\"email\" placeholder=\"email\" autoComplete=\"off\"\r\n                                onChange={(e) => this.validate.email(e)} ref={this.input.email} />\r\n\r\n                            <input type=\"password\" className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword1\"\r\n                                name=\"password1\" placeholder=\"hasło\" autoComplete=\"off\" onChange={(e) => this.validate.firtstPassword(e)}\r\n                                ref={this.input.password1} />\r\n\r\n                            <input type=\"password\" className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword2\"\r\n                                name=\"password2\" placeholder=\"powtórz hasło\" autoComplete=\"off\"\r\n                                onChange={(e) => this.validate.secondPassword(e)} ref={this.input.password2} />\r\n\r\n                        </form>\r\n\r\n                        <div className=\"flexSpace\">\r\n\r\n                            <div className=\"reigisterBackButon\" onClick={() => this.props.history.goBack()}>Powrót</div>\r\n\r\n                            <div className=\"buttonFill loginRegisterButton\" onClick={() => this.signUp()}>Zarejestruj</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n// const mapStateToProps = state => ({\r\n//     isLogged: state.isLogged\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        push: (x) => dispatch(notificationsPush(x)),\r\n    }\r\n};\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n\r\n//export default Register;"]},"metadata":{},"sourceType":"module"}