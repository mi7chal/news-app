{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Documents/portal_psi/src/register/register.js\";\nimport \"./register.css\";\nimport React, { useState } from \"react\";\nimport { notificationsPush } from \"../redux/actions/\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.validate = {\n      firtstPassword: e => {\n        if (e.target.value.length >= 8) {\n          e.target.style.borderColor = \"var(--background3)\";\n          this.setState({\n            before: {\n              email: \"\"\n            }\n          });\n        } else {\n          e.target.style.borderColor = \"#c21d1d\";\n          this.setState({\n            before: {\n              email: \"Hasło jest za krótkie\"\n            }\n          });\n        }\n      },\n      secondPassword: e => {\n        if (e.target.value.length >= 8 && this.input.password1.current.value === e.target.value) {\n          e.target.style.borderColor = \"var(--background3)\";\n          this.passwordValid = true;\n          this.setState({\n            before: {\n              password2: \"\"\n            }\n          });\n        } else {\n          this.passwordValid = false;\n          e.target.style.borderColor = \"#c21d1d\";\n          this.setState({\n            before: {\n              password2: \"Hasła muszą być identyczne\"\n            }\n          });\n        }\n      },\n      email: e => {\n        if (e.target.value.includes(\".\") && e.target.value.includes(\"@\")) {\n          e.target.style.borderColor = \"var(--background3)\";\n          this.emailValid = true;\n          this.setState({\n            before: {\n              email: \"\"\n            }\n          });\n        } else {\n          this.emailValid = false;\n          this.setState({\n            before: {\n              email: \"Niepoprawny email\"\n            }\n          });\n          e.target.style.borderColor = \"#c21d1d\";\n        }\n      },\n      login: e => {\n        if (e.target.value.length >= 5) {\n          e.target.style.borderColor = \"var(--background3)\";\n          this.setState({\n            before: {\n              login: \"\"\n            }\n          });\n        } else {\n          e.target.style.borderColor = \"#c21d1d\";\n          this.setState({\n            before: {\n              login: \"Login jest za krótki\"\n            }\n          });\n        }\n      }\n    };\n\n    this.signUp = async () => {\n      if (this.emailValid && this.passwordValid) {\n        const formData = {\n          name: this.input.name.current.value,\n          surname: this.input.surname.current.value,\n          login: this.input.login.current.value,\n          email: this.input.email.current.value,\n          password1: this.input.password1.current.value,\n          password2: this.input.password2.current.value\n        };\n        const fetchData = await fetch(\"http://localhost/blogg/api/register.php\", {\n          credentials: \"include\",\n          method: \"POST\",\n          body: JSON.stringify(formData)\n        });\n        const data = await fetchData.json();\n\n        if (data.status === 1) {\n          this.props.history.push(\"/\");\n          this.props.history.go(0);\n          this.props.push({\n            x: data.info,\n            color: \"\"\n          });\n        } else {\n          //var newNotifications= data.info.map((x,i)=><Modal key={i} color=\"red\">{x}</Modal>);\n          //this.setState({ modal: null });\n          //this.setState({ modal: newNotifications });\n          data.info.map(item => this.props.push({\n            x: item,\n            color: \"red\"\n          }));\n        }\n      } else {\n        return 0;\n      }\n    };\n\n    this.emailValid = false;\n    this.passwordValid = false;\n    this.loginValid = false;\n    this.input = {};\n    this.input.name = /*#__PURE__*/React.createRef();\n    this.input.surname = /*#__PURE__*/React.createRef();\n    this.input.login = /*#__PURE__*/React.createRef();\n    this.input.email = /*#__PURE__*/React.createRef();\n    this.input.password1 = /*#__PURE__*/React.createRef();\n    this.input.password2 = /*#__PURE__*/React.createRef();\n    this.state = {\n      modal: [],\n      before: {\n        login: \" \",\n        email: \" \",\n        password1: \" \",\n        password2: \" \"\n      }\n    };\n\n    if (this.props.loggedAlready) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  onLogout() {}\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    if (this.props.loggedAlready) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.loggedAlready) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerBackground\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"registerHeader\",\n            children: \"Zarejestruj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"registerForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterName\",\n              name: \"name\",\n              placeholder: \"imi\\u0119\",\n              autoComplete: \"off\",\n              ref: this.input.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterSurname\",\n              name: \"surname\",\n              placeholder: \"nazwisko\",\n              autoComplete: \"off\",\n              ref: this.input.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: this.state.before.login\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterLogin\",\n                name: \"login\",\n                placeholder: \"login\",\n                autoComplete: \"off\",\n                onChange: e => this.validate.login(e),\n                ref: this.input.login\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: this.state.before.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterEmail\",\n                name: \"email\",\n                placeholder: \"email\",\n                autoComplete: \"off\",\n                onChange: e => this.validate.email(e),\n                ref: this.input.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: this.state.before.password1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword1\",\n                name: \"password1\",\n                placeholder: \"has\\u0142o\",\n                autoComplete: \"off\",\n                onChange: e => this.validate.firtstPassword(e),\n                ref: this.input.password1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: this.state.before.password2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword2\",\n                name: \"password2\",\n                placeholder: \"powt\\xF3rz has\\u0142o\",\n                autoComplete: \"off\",\n                onChange: e => this.validate.secondPassword(e),\n                ref: this.input.password2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexSpace\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reigisterBackButon\",\n              onClick: () => this.props.history.goBack(),\n              children: \"Powr\\xF3t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonFill loginRegisterButton\",\n              onClick: () => this.signUp(),\n              children: \"Zarejestruj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const mapStateToProps = state => ({\n//     isLogged: state.isLogged\n// });\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    push: x => dispatch(notificationsPush(x))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register); //export default Register;","map":{"version":3,"sources":["/Users/michal/Documents/portal_psi/src/register/register.js"],"names":["React","useState","notificationsPush","connect","Register","Component","constructor","props","validate","firtstPassword","e","target","value","length","style","borderColor","setState","before","email","secondPassword","input","password1","current","passwordValid","password2","includes","emailValid","login","signUp","formData","name","surname","fetchData","fetch","credentials","method","body","JSON","stringify","data","json","status","history","push","go","x","info","color","map","item","loginValid","createRef","state","modal","loggedAlready","onLogout","componentDidMount","window","scrollTo","componentDidUpdate","render","goBack","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import \"./register.css\";\r\nimport React, { useState } from \"react\";\r\nimport { notificationsPush } from \"../redux/actions/\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.emailValid = false;\r\n    this.passwordValid = false;\r\n    this.loginValid = false;\r\n\r\n    this.input = {};\r\n\r\n    this.input.name = React.createRef();\r\n    this.input.surname = React.createRef();\r\n    this.input.login = React.createRef();\r\n    this.input.email = React.createRef();\r\n    this.input.password1 = React.createRef();\r\n    this.input.password2 = React.createRef();\r\n\r\n    this.state = {\r\n      modal: [],\r\n      before: { login: \" \", email: \" \", password1: \" \", password2: \" \" },\r\n    };\r\n    if (this.props.loggedAlready) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  onLogout() {}\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    if (this.props.loggedAlready) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.loggedAlready) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  validate = {\r\n    firtstPassword: (e) => {\r\n      if (e.target.value.length >= 8) {\r\n        e.target.style.borderColor = \"var(--background3)\";\r\n        this.setState({ before: {email:\"\"} });\r\n\r\n      } else {\r\n        e.target.style.borderColor = \"#c21d1d\";\r\n        this.setState({ before: {email:\"Hasło jest za krótkie\"} });\r\n\r\n      }\r\n    },\r\n    secondPassword: (e) => {\r\n      if (\r\n        e.target.value.length >= 8 &&\r\n        this.input.password1.current.value === e.target.value\r\n      ) {\r\n        e.target.style.borderColor = \"var(--background3)\";\r\n        this.passwordValid = true;\r\n        this.setState({ before: { password2: \"\" } });\r\n      } else {\r\n        this.passwordValid = false;\r\n        e.target.style.borderColor = \"#c21d1d\";\r\n        this.setState({ before: { password2: \"Hasła muszą być identyczne\" } });\r\n      }\r\n    },\r\n    email: (e) => {\r\n      if (e.target.value.includes(\".\") && e.target.value.includes(\"@\")) {\r\n        e.target.style.borderColor = \"var(--background3)\";\r\n        this.emailValid = true;\r\n        this.setState({ before: { email: \"\" } });\r\n      } else {\r\n        this.emailValid = false;\r\n        this.setState({ before: { email: \"Niepoprawny email\" } });\r\n\r\n        e.target.style.borderColor = \"#c21d1d\";\r\n      }\r\n    },\r\n    login: (e) => {\r\n      if (e.target.value.length >= 5) {\r\n        e.target.style.borderColor = \"var(--background3)\";\r\n        this.setState({ before: { login: \"\" } });\r\n      } else {\r\n        e.target.style.borderColor = \"#c21d1d\";\r\n        this.setState({ before: { login: \"Login jest za krótki\" } });\r\n      }\r\n    },\r\n  };\r\n\r\n  signUp = async () => {\r\n    if (this.emailValid && this.passwordValid) {\r\n      const formData = {\r\n        name: this.input.name.current.value,\r\n        surname: this.input.surname.current.value,\r\n        login: this.input.login.current.value,\r\n        email: this.input.email.current.value,\r\n        password1: this.input.password1.current.value,\r\n        password2: this.input.password2.current.value,\r\n      };\r\n\r\n      const fetchData = await fetch(\"http://localhost/blogg/api/register.php\", {\r\n        credentials: \"include\",\r\n        method: \"POST\",\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await fetchData.json();\r\n      if (data.status === 1) {\r\n        this.props.history.push(\"/\");\r\n        this.props.history.go(0);\r\n        this.props.push({ x: data.info, color: \"\" });\r\n      } else {\r\n        //var newNotifications= data.info.map((x,i)=><Modal key={i} color=\"red\">{x}</Modal>);\r\n        //this.setState({ modal: null });\r\n        //this.setState({ modal: newNotifications });\r\n        data.info.map((item) => this.props.push({ x: item, color: \"red\" }));\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"registerBackground\">\r\n          <div className=\"registerBox\">\r\n            <p className=\"registerHeader\">Zarejestruj</p>\r\n\r\n            <form className=\"registerForm\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterName\"\r\n                name=\"name\"\r\n                placeholder=\"imię\"\r\n                autoComplete=\"off\"\r\n                ref={this.input.name}\r\n              />\r\n\r\n              <input\r\n                type=\"text\"\r\n                className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterSurname\"\r\n                name=\"surname\"\r\n                placeholder=\"nazwisko\"\r\n                autoComplete=\"off\"\r\n                ref={this.input.surname}\r\n              />\r\n\r\n              <div>\r\n                <div>{this.state.before.login}</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterLogin\"\r\n                  name=\"login\"\r\n                  placeholder=\"login\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => this.validate.login(e)}\r\n                  ref={this.input.login}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <div>{this.state.before.email}</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterEmail\"\r\n                  name=\"email\"\r\n                  placeholder=\"email\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => this.validate.email(e)}\r\n                  ref={this.input.email}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <div>{this.state.before.password1}</div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword1\"\r\n                  name=\"password1\"\r\n                  placeholder=\"hasło\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => this.validate.firtstPassword(e)}\r\n                  ref={this.input.password1}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <div>{this.state.before.password2}</div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"registerComponentInput loginRegisterInput toSelect uniqueRegisterPassword2\"\r\n                  name=\"password2\"\r\n                  placeholder=\"powtórz hasło\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => this.validate.secondPassword(e)}\r\n                  ref={this.input.password2}\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"flexSpace\">\r\n              <div\r\n                className=\"reigisterBackButon\"\r\n                onClick={() => this.props.history.goBack()}\r\n              >\r\n                Powrót\r\n              </div>\r\n\r\n              <div\r\n                className=\"buttonFill loginRegisterButton\"\r\n                onClick={() => this.signUp()}\r\n              >\r\n                Zarejestruj\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// const mapStateToProps = state => ({\r\n//     isLogged: state.isLogged\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    push: (x) => dispatch(notificationsPush(x)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n\r\n//export default Register;\r\n"]},"metadata":{},"sourceType":"module"}