{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Documents/portal_psi/src/edit/edit.js\",\n    _s = $RefreshSig$();\n\nimport \"./edit.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { notificationsPush } from \"../redux/actions/\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport TextBox from \"../components/TextBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditArticle() {\n  _s();\n\n  const [options, setOptions] = useState(\"\");\n  const editImageInput = useRef();\n  const editImageView = useRef();\n  const titleInput = useRef();\n  const contentInput = useRef();\n  const selectStatus = useRef();\n  const selectCategory = useRef();\n  const tags = useRef();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [ifEdit, setIfEdit] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function fetchdownload() {\n      const fetchData = await fetch(\"http://localhost/blogg/api/listCategories.php\", {\n        credentials: \"include\",\n        method: \"GET\"\n      });\n      const data = await fetchData.json();\n\n      if (data.status === 1) {\n        const toSet = await data.body.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: x.id,\n          children: x.kategoria\n        }, x.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this));\n        setOptions(toSet);\n\n        if (data.alreadyLogged === false) {\n          history.push(\"/\");\n        }\n      } else {\n        dispatch(notificationsPush({\n          x: data.info,\n          color: \"red\"\n        }));\n      }\n\n      if (id) {\n        const fetchData = await fetch(`http://localhost/blogg/api/articleToEdit.php?id=${id}`, {\n          credentials: \"include\",\n          method: \"GET\"\n        });\n        const data1 = await fetchData.json();\n\n        if (data1.status === 1) {\n          const tagsToView = JSON.parse(data1.body.tagi).join(\", \");\n          editImageView.current.style.backgroundImage = `url('http://localhost/blogg/api/articleImages/${data1.body.id}/${data1.body.zdjecie}')`; //titleInput.current.value = data1.body.tytul;\n\n          console.log(titleInput.current);\n          contentInput.current.value = data1.body.tresc;\n          selectStatus.current.value = data1.body.status;\n          selectCategory.current.value = data1.body.kategorie;\n          tags.current.value = tagsToView;\n          setIfEdit(true);\n        } else {\n          history.push(\"/panel\");\n          dispatch(notificationsPush({\n            x: data1.info,\n            color: \"red\"\n          }));\n        }\n      }\n    }\n\n    fetchdownload();\n  }, [dispatch, history, id]);\n\n  const imageOnChange = evt => {\n    var tgt = evt.target,\n        files = tgt.files;\n\n    if (FileReader && files && files.length) {\n      var fr = new FileReader();\n\n      fr.onload = function () {\n        editImageView.current.style.backgroundImage = `url('${fr.result}')`;\n      };\n\n      fr.readAsDataURL(files[0]);\n    } else {}\n  };\n\n  const addSend = async () => {\n    var formData = new FormData();\n    let link = \"http://localhost/blogg/api/add.php\";\n\n    if (ifEdit) {\n      link = \"http://localhost/blogg/api/edit.php\";\n      formData.append(\"id\", id);\n    }\n\n    formData.append(\"title\", titleInput.current.value);\n    formData.append(\"tags\", JSON.stringify(tags.current.value.split(\", \")));\n    formData.append(\"content\", contentInput.current.value);\n    formData.append(\"image\", editImageInput.current.files[0]);\n    formData.append(\"category\", selectCategory.current.value);\n    formData.append(\"status\", selectStatus.current.value);\n    const dataTemp = await fetch(link, {\n      method: \"POST\",\n      credentials: \"include\",\n      body: formData\n    });\n    const data = await dataTemp.json();\n\n    if (data.status === 1) {\n      history.push(\"/panel\");\n      dispatch(notificationsPush({\n        x: data.info,\n        color: \"\"\n      }));\n    } else {\n      dispatch(notificationsPush({\n        x: data.info,\n        color: \"red\"\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editImage\",\n      ref: editImageView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      placeholder: \"Tytu\\u0142\",\n      className: \"editTitle toSelect\",\n      ref: titleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Tre\\u015B\\u0107\",\n      className: \"editContent toSelect\",\n      ref: contentInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), \"Tagi (oddziel przeicnkiem i spacj\\u0105)\", \" \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"z dzi\\u015B, ogr\\xF3d, news\",\n      className: \"editTags toSelect\",\n      ref: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), \"Kategoria:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: selectCategory,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), \"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: selectStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"prywatny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"publiczny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      ref: editImageInput,\n      onChange: e => imageOnChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: () => addSend(),\n      children: \"Zapisz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditArticle, \"mIIGiRFmsN+src9IawIeEnTJErw=\", false, function () {\n  return [useDispatch, useHistory, useParams];\n});\n\n_c = EditArticle;\nexport default EditArticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditArticle\");","map":{"version":3,"sources":["/Users/michal/Documents/portal_psi/src/edit/edit.js"],"names":["React","useState","useRef","useEffect","useDispatch","notificationsPush","useHistory","useParams","TextBox","EditArticle","options","setOptions","editImageInput","editImageView","titleInput","contentInput","selectStatus","selectCategory","tags","dispatch","history","ifEdit","setIfEdit","id","fetchdownload","fetchData","fetch","credentials","method","data","json","status","toSet","body","map","x","kategoria","alreadyLogged","push","info","color","data1","tagsToView","JSON","parse","tagi","join","current","style","backgroundImage","zdjecie","console","log","value","tresc","kategorie","imageOnChange","evt","tgt","target","files","FileReader","length","fr","onload","result","readAsDataURL","addSend","formData","FormData","link","append","stringify","split","dataTemp","e"],"mappings":"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","sourcesContent":["import \"./edit.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notificationsPush } from \"../redux/actions/\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TextBox from \"../components/TextBox\";\r\n\r\nfunction EditArticle() {\r\n  const [options, setOptions] = useState(\"\");\r\n  const editImageInput = useRef();\r\n  const editImageView = useRef();\r\n  const titleInput = useRef();\r\n  const contentInput = useRef();\r\n  const selectStatus = useRef();\r\n  const selectCategory = useRef();\r\n  const tags = useRef();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [ifEdit, setIfEdit] = useState(false);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchdownload() {\r\n      const fetchData = await fetch(\r\n        \"http://localhost/blogg/api/listCategories.php\",\r\n        { credentials: \"include\", method: \"GET\" }\r\n      );\r\n      const data = await fetchData.json();\r\n      if (data.status === 1) {\r\n        const toSet = await data.body.map((x) => (\r\n          <option value={x.id} key={x.id}>\r\n            {x.kategoria}\r\n          </option>\r\n        ));\r\n        setOptions(toSet);\r\n\r\n        if (data.alreadyLogged === false) {\r\n          history.push(\"/\");\r\n        }\r\n      } else {\r\n        dispatch(notificationsPush({ x: data.info, color: \"red\" }));\r\n      }\r\n      if (id) {\r\n        const fetchData = await fetch(\r\n          `http://localhost/blogg/api/articleToEdit.php?id=${id}`,\r\n          { credentials: \"include\", method: \"GET\" }\r\n        );\r\n        const data1 = await fetchData.json();\r\n\r\n        if (data1.status === 1) {\r\n          const tagsToView = JSON.parse(data1.body.tagi).join(\", \");\r\n\r\n          editImageView.current.style.backgroundImage = `url('http://localhost/blogg/api/articleImages/${data1.body.id}/${data1.body.zdjecie}')`;\r\n          //titleInput.current.value = data1.body.tytul;\r\n          console.log(titleInput.current)\r\n          contentInput.current.value = data1.body.tresc;\r\n          selectStatus.current.value = data1.body.status;\r\n          selectCategory.current.value = data1.body.kategorie;\r\n          tags.current.value = tagsToView;\r\n          setIfEdit(true);\r\n        } else {\r\n          history.push(\"/panel\");\r\n          dispatch(notificationsPush({ x: data1.info, color: \"red\" }));\r\n        }\r\n      }\r\n    }\r\n    fetchdownload();\r\n  }, [dispatch, history, id]);\r\n\r\n  const imageOnChange = (evt) => {\r\n    var tgt = evt.target,\r\n      files = tgt.files;\r\n\r\n    if (FileReader && files && files.length) {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        editImageView.current.style.backgroundImage = `url('${fr.result}')`;\r\n      };\r\n      fr.readAsDataURL(files[0]);\r\n    } else {\r\n    }\r\n  };\r\n  const addSend = async () => {\r\n    var formData = new FormData();\r\n    let link = \"http://localhost/blogg/api/add.php\";\r\n    if (ifEdit) {\r\n      link = \"http://localhost/blogg/api/edit.php\";\r\n      formData.append(\"id\", id);\r\n    }\r\n\r\n    formData.append(\"title\", titleInput.current.value);\r\n    formData.append(\"tags\", JSON.stringify(tags.current.value.split(\", \")));\r\n    formData.append(\"content\", contentInput.current.value);\r\n    formData.append(\"image\", editImageInput.current.files[0]);\r\n    formData.append(\"category\", selectCategory.current.value);\r\n    formData.append(\"status\", selectStatus.current.value);\r\n    const dataTemp = await fetch(link, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: formData,\r\n    });\r\n    const data = await dataTemp.json();\r\n\r\n    if (data.status === 1) {\r\n      history.push(\"/panel\");\r\n      dispatch(notificationsPush({ x: data.info, color: \"\" }));\r\n    } else {\r\n      dispatch(notificationsPush({ x: data.info, color: \"red\" }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"editBody\">\r\n      <div className=\"editImage\" ref={editImageView}></div>\r\n      <TextBox\r\n        placeholder=\"Tytuł\"\r\n        className=\"editTitle toSelect\"\r\n        ref={titleInput}\r\n      ></TextBox>\r\n      <textarea\r\n        placeholder=\"Treść\"\r\n        className=\"editContent toSelect\"\r\n        ref={contentInput}\r\n      ></textarea>\r\n      <br />\r\n      Tagi (oddziel przeicnkiem i spacją){\" \"}\r\n      <textarea\r\n        placeholder=\"z dziś, ogród, news\"\r\n        className=\"editTags toSelect\"\r\n        ref={tags}\r\n      />\r\n      <br />\r\n      <br />\r\n      Kategoria:<select ref={selectCategory}>{options}</select>\r\n      <br />\r\n      <br />\r\n      Status:\r\n      <select ref={selectStatus}>\r\n        <option value={0}>prywatny</option>\r\n        <option value={1}>publiczny</option>\r\n      </select>\r\n      <br />\r\n      <br />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        ref={editImageInput}\r\n        onChange={(e) => imageOnChange(e)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <div className=\"button\" onClick={() => addSend()}>\r\n        Zapisz\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditArticle;\r\n"]},"metadata":{},"sourceType":"module"}